class s{constructor(s){this.parser=s}dispose(){delete this.parser}shouldParse(s){return!0}process(s){return null!=this.styles&&(s.styles=[]),{children:this.parser.parseChildren(s),attributes:this.parser.parseAttributes(s),styles:this.parser.parseStyles(s),content:this.parser.parseContent(s)}}setValues(s,e){const t=Object.keys(e);for(let r of t){const t=null!=e[r]?e[r]:"";s=s.split(r).join(t)}return s}validate(s,e){if(null!=s.elements)for(let t of s.elements)this.parser.validateItem(t,e)}assert(s,e,t){const r=1==s();return r&&e.push(t),!r}}export{s as BaseProvider};
//# sourceMappingURL=crs-base-provider.js.map
