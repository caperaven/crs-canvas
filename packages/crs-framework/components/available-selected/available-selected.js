import"./../../components/tab-list/tab-list.js";import{ItemsFactory as i}from"./items-factory.js";class c extends HTMLElement{#s=this.#l.bind(this);#i;#e;#t;#a;get clickedHandler(){return this.#s}get html(){return import.meta.url.replace(".js",".html")}constructor(){super(),this.attachShadow({mode:"open"})}async connectedCallback(){this.shadowRoot.innerHTML=await fetch(this.html).then(t=>t.text()),await this.load()}async load(){requestAnimationFrame(async()=>{this.shadowRoot.addEventListener("click",this.#s),this.#i=this.shadowRoot.querySelector("tab-list"),this.#a="selected",await crsbinding.translations.parseElement(this),await crs.call("component","notify_ready",{element:this})})}async disconnectedCallback(){await this.shadowRoot.removeEventListener("click",this.#s),this.#s=null,this.#t=null,this.#a=null,this.#i=null,this.#e=this.#e?.dispose()}async#l(t){const e=t.target;e.dataset.action!=null&&this[e.dataset.action]!=null&&await this[e.dataset.action](t)}async toggle(t){const e=t.target.parentElement,s=e.getAttribute("class");s!==this.#a&&(this.#a=s);const a=s==="available"?"selected":"available",l=this.#t[s].find(n=>`${n[this.dataset.idField||"id"]}`==`${e.dataset.id}`);await crs.call("array","transfer",{source:this.#t[s],target:this.#t[a],value:l}),await this.update(this.#t)}async drag(t){console.log(t.target,t.target.dataset.action)}async drill(t){console.log(t.target,t.target.dataset.action)}async update(t){this.#t=t;const e=await i.createTemplate(this,this.#a,"selected",this.#t),s=await i.createTemplate(this,this.#a,"available",this.#t),a=document.createElement("perspective-element");a.appendChild(e),a.appendChild(s),a.dataset.store=a._dataId,this.#e!=null&&(this.shadowRoot.removeChild(this.#e),this.#e=await this.#e?.dispose()),this.shadowRoot.appendChild(a),this.#e=a,this.#i.target=this.#e}getSelectedItems(){return this.#t.selected}}customElements.define("available-selected",c);export{c as AvailableSelected};
