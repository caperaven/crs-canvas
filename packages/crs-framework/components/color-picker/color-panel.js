class s extends HTMLCanvasElement{#i;#t;static get observedAttributes(){return["value"]}async connectedCallback(){this.#i="rgba(255,0,0,1)",this.#t=this.getContext("2d"),this.#e()}async disconnectedCallback(){this.#i=null,this.#t=null}#e(){this.#t.fillStyle=this.#i,this.#t.fillRect(0,0,this.width,this.height);const t=this.#t.createLinearGradient(0,0,this.width,0);t.addColorStop(0,"rgba(255,255,255,1)"),t.addColorStop(1,"rgba(255,255,255,0)"),this.#t.fillStyle=t,this.#t.fillRect(0,0,this.width,this.height);const i=this.#t.createLinearGradient(0,0,0,this.height);i.addColorStop(0,"rgba(0,0,0,0)"),i.addColorStop(1,"rgba(0,0,0,1)"),this.#t.fillStyle=i,this.#t.fillRect(0,0,this.width,this.height)}async attributeChangedCallback(t,i,l){const e=await crs.call("colors","hex_to_rgb",{hex:l});this.#i=`rgba(${e.r}, ${e.g}, ${e.b}, 1)`,this.#e()}}customElements.define("color-panel",s,{extends:"canvas"});
