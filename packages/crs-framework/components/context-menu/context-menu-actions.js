import"./context-menu.js";class b{static async perform(t,n,e,s){await this[t.action](t,n,e,s)}static async show(t,n,e,s){const l=await crs.dom.get_element(t.args.element,n,e,s),i=await crs.process.getValue(t.args.options,n,e,s),r=await crs.process.getValue(t.args.at,n,e,s),g=await crs.process.getValue(t.args.anchor,n,e,s),u=await crs.process.getValue(t.args.point,n,e,s),h=await crs.process.getValue(t.args.margin,n,e,s),o=await crs.process.getValue(t.args.callback,n,e,s),w=await crs.process.getValue(t.args.templates,n,e,s);globalThis.contextMenu!=null&&await this.close();const m=await crs.process.getValue(t.args.icon_font_family,n,e,s),d=await crs.process.getValue(t.args.height,n,e,s),a=document.createElement("context-menu");if(a.options=i,a.templates=w,a.point=u,a.target=l,a.at=r,a.anchor=g,a.context=n,a.margin=h,a.height=d,a.style.setProperty("--icon-font",m),document.body.appendChild(a),o!=null){const c=f=>{a.removeEventListener("change",c),o(f)};a.addEventListener("change",c)}globalThis.contextMenu=a}static async close(){globalThis.contextMenu!=null&&(globalThis.contextMenu.parentElement.removeChild(globalThis.contextMenu),delete globalThis.contextMenu)}}crs.intent.context_menu=b;export{b as ContextMenuActions};
