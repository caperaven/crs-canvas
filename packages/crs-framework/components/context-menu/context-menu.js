import"./../filter-header/filter-header.js";class a extends crsbinding.classes.BindableElement{#t;#n;#a;#l;#e;#i;#s;#o;#r;#c;get shadowDom(){return!0}get html(){return import.meta.url.replace(".js",".html")}set options(t){this.#t=t}set point(t){this.#n=t}set context(t){this.#s=t}set at(t){this.#a=t}set anchor(t){this.#l=t}set target(t){this.#e=t}set margin(t){this.#c=t}set height(t){typeof t=="number"&&(t=`${t}px`),this.style.setProperty("--height",t)}async connectedCallback(){return new Promise(async t=>{await super.connectedCallback(),this.#i=this.click.bind(this),this.shadowRoot.addEventListener("click",this.#i),await crsbinding.translations.add({approved:"Approved"}),requestAnimationFrame(async()=>{const e=this.shadowRoot.querySelector(".popup");await this.#m();let i="right",s="top";this.#e&&(i="bottom",s="left"),await crs.call("fixed_layout","set",{element:e,target:this.#e,point:this.#n,at:this.#a||i,anchor:this.#l||s,margin:this.#c||0}),await crs.call("dom_interactive","enable_resize",{element:this.popup,resize_query:"#resize",options:{}}),await crs.call("component","notify_ready",{element:this}),t()})})}async disconnectedCallback(){this.removeEventListener("click",this.#i),this.#i=null,this.#t=null,this.#n=null,this.#a=null,this.#l=null,this.#e=null,this.#s=null,this.#o=null,this.#r=null,this.#c=null}#h(t){return this.#t.find(i=>i.id==t)}async#m(){const t=document.createDocumentFragment();for(const e of this.#t){if(e.title?.trim()=="-"){t.appendChild(document.createElement("hr"));continue}const i=await crs.call("dom","create_element",{parent:t,id:e.id,tag_name:"li",dataset:{icon:e.icon,ic:e.icon_color||"black",tags:e.tags||"",...e.dataset||{}},attributes:{role:"menuitem","aria-selected":e.selected==!0,...e.attributes||{}},styles:e.styles,variables:{"--cl-icon":e.icon_color||"black"}});if(e.template!=null){const s=this.templates[e.template],n=await crs.call("html","create",{ctx:e,html:s});i.appendChild(n)}else i.textContent=e.title}this.container.innerHTML="",this.container.appendChild(t),this.#s&&await crsbinding.staticInflationManager.inflateElements(this.container.children,this.#s)}async click(t){if(t.target.matches(".back"))return await this.close();const e=await crs.call("dom_utils","find_parent_of_type",{element:t.target,nodeName:"li",stopAtNodeName:"ul"});if(e==null)return;const i=this.#h(e.id);i.type!=null&&crs.call(i.type,i.action,i.args),this.dataset.value=i.id,this.dispatchEvent(new CustomEvent("change",{detail:i.id})),await this.close()}async close(){await crs.call("context_menu","close")}async focus(){}}customElements.define("context-menu",a);
