class r extends HTMLElement{#t=this.#o.bind(this);#i=Object.freeze({success:"check-circle",warning:"warning",error:"error-fill",info:"info"});constructor(){super(),this.attachShadow({mode:"open"})}async connectedCallback(){this.shadowRoot.innerHTML=await fetch(import.meta.url.replace(".js",".html")).then(t=>t.text()),requestAnimationFrame(()=>this.load())}async load(){this.shadowRoot.addEventListener("click",this.#t)}async disconnectedCallback(){this.shadowRoot.removeEventListener("click",this.#t),this.shadowRoot.innerHTML="",this.#t=null}async#o(t){t.target.id==="btnClose"&&await this.#e(t.target.parentElement)}async#e(t){const e=t.querySelector("#btnAction");e!=null&&(e.onclick=null),t.remove(),await crs.call("fixed_position","set",{element:this,position:this.dataset.position,margin:this.dataset.margin})}#n(t,e){return new Promise(o=>{const n=setTimeout(async()=>{clearTimeout(n),await this.#e(t),o()},e)})}async show(t,e,o,n){const i=this.shadowRoot.querySelector("#toast-notification-item").content.cloneNode(!0).children[0];i.dataset.severity=o,i.querySelector("#message").innerText=e;const s=i.querySelector("#btnAction");if(n==null)s.remove();else{s.textContent=n.caption,s.onclick=n.callback;const c=i.querySelector("#btnClose");c.style.borderLeft="var(--border)"}const a=i.querySelector("icon");a.textContent=this.#i[o],a.dataset.severity=o,e.indexOf(`
`)!==-1&&(a.style.alignSelf="flex-start"),this.shadowRoot.appendChild(i),await crs.call("fixed_position","set",{element:this,position:this.dataset.position,margin:this.dataset.margin}),await this.#n(i,t)}}customElements.define("toast-notification",r);
